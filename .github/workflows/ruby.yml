name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  RAILS_ENV: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DB: batosjugando_test


jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.6.5']
        
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:11-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: "${{env.POSTGRES_USER}}"
          POSTGRES_PASSWORD: "${{env.POSTGRES_PASSWORD}}"
          POSTGRES_DB: "${{env.POSTGRES_DB}}"
        ports:
          - 5432:5432

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
      with:
        ruby-version: ${{ matrix.ruby-version }}
        working-directory: 'backend-rails'
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    
    - name: rubocop
      uses: reviewdog/action-rubocop@v1
      with:
        workdir: ./backend-rails
        rubocop_version: gemfile
        rubocop_extensions: rubocop-rails:gemfile rubocop-rspec:gemfile
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review # Default is github-pr-check

    - name: Setup database
      working-directory: ./backend-rails
      env:
        RAILS_ENV: test
        POSTGRES_HOST: "${{env.POSTGRES_HOST}}"
        POSTGRES_USER: "${{env.POSTGRES_USER}}"
        POSTGRES_PASSWORD: "${{env.POSTGRES_PASSWORD}}"
        POSTGRES_DB: "${{env.POSTGRES_DB}}"
      run: |
        bundle exec rails db:create
        bundle exec rails db:schema:load

    - name: Run tests
      working-directory: ./backend-rails
      run: bundle exec rspec
